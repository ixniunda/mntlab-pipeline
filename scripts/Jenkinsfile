// import modules
import hudson.plugins.git.*

// parameters
def workstation="EPBYMINW1969"
def student="kzalialetdzinau"
def project="MNTLAB-${student}-slave1-build-job"
def artifactID="${student}_dsl_script.tar.gz"

// paths
def path_to_file="workspace/$workstation/$project"
def path_to_jar="build/libs/gradle-simple.jar"
def path_to_jenkinsfile="scripts/Jenkinsfile"

// status
success='SUCCESS'
fail='FAILURE'
stage_result=success

// slack notification 
def send_to_slack (slack_message){
    sh 'curl -X POST -H \'Content-type: application/json\' --data \'{\"text\":\"${slack_message}\"}\' https://hooks.slack.com/services/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'
}

// make some magic
stage('Preparation') {

    stage_name='Preparation'
    node {
        cleanWs()
        try {
            checkout([$class: 'GitSCM', branches: [[name: "*/$student"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/MNT-Lab/mntlab-pipeline.git']]])

        }catch(Exception ERROR){           
            handle_exception(ERROR)
            throw ERROR
        }
    }
}

if (stage_result == success){
stage('Building code') {
    node{
  stage_name='Building code'
        try {
            parallel ex_build: {sh "$GRADLE_TOOL build"},
                    ex_jar: {sh "GRADLE_TOOL jar"}
        }catch (Exception ERROR){            
            handle_exception(ERROR)            
        }
    }
}
}
// modules
import hudson.plugins.git.*
import hudson.model.*

// environment
def GRADLE_HOME = tool "gradle3.3"

// parameters
def workstation="EPBYMINW1969"
def student="kzalialetdzinau"             
def project="MNTLAB-${student}-child1-build-job"  ${project}
def artifactID="${student}_dsl_script.tar.gz"

node ('${workstation}') {

// make some magic
    // Get code from a GitHub 
   try{
   stage('Preparation') { 
      checkout([$class: 'GitSCM', branches: [[name: '*/${student}']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/MNT-Lab/mntlab-pipeline.git']]])
   } } catch (Exception err){
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Preparation step"}' https://hooks.slack.com/services/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"""
   }
   
   try{
   stage('Build') {
      // Run the gradle build
      sh "'${GRADLE_HOME}/bin/gradle' build"
   } } catch (Exception err){
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Build step"}' https://hooks.slack.com/services/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"""
   }
   
   try{
   stage('Testing Code') {
       parallel (
           cucumber: {
               sh "'${GRADLE_HOME}/bin/gradle' cucumber"
           },
           jacoco: {
               sh "'${GRADLE_HOME}/bin/gradle' jacocoTestReport"
           },
           unit: {
               sh "'${GRADLE_HOME}/bin/gradle' test"
           }
       )
   } } catch (Exception err){
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Testing Code step"}' https://hooks.slack.com/services/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"""
   }
   
   try{
   stage('Triggering job and fetching artefact after finishing') {
        build job: '${project}', parameters: [string(name: 'BRANCH_NAME', value: '${student}')]
        copyArtifacts(projectName: '${workstation}/${project}', filter: '*dsl_script.tar.gz');
        sh 'tar -xvf ${artifactID}'
   } } catch (Exception err){
        sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Triggering Other Job step"}' https://hooks.slack.com/services/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"""
   }
   
   try{
   stage('Packaging and Publishing results') {
       sh "tar -cvzf pipeline-${student}-'$BUILD_NUMBER'.tar.gz dsl.groovy Jenkinsfile build/libs/gradle-simple.jar"
       archiveArtifacts 'pipeline-${student}-${BUILD_NUMBER}.tar.gz'
       sh "/opt/groovy/bin/groovy -DVersionID='$BUILD_NUMBER' nexus.groovy"
   } } catch (Exception err){
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Packaging and Publishing step"}' https://hooks.slack.com/services/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"""
   }
   
   try {
   stage('Asking for manual approval') {
       input 'Do you want deploy a project?/Abort'
   } } catch (Exception err){
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Deployment step"}' https://hooks.slack.com/services/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"""
   }
   
   try{
   stage('Deployment') {
       sh "java -jar build/libs/gradle-simple.jar"
   } } catch (Exception err){
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline FAILED at Deployment step"}' https://hooks.slack.com/services/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"""
   }
   
   stage('Sending status') {
       currentBuild.result = 'SUCCESS'
       sh """curl -X POST -H 'Content-type: application/json' --data '{"text":"Pipeline SUCCEEDED"}' https://hooks.slack.com/services/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"""
   }    
}